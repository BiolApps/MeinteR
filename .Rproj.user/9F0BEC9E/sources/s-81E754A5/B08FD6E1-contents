
###############################################
# Evaluation - Number 1
# Title - Building TCGA cancer profiles 
# Description - We downloaded TCGA data containing DNA methylation levels for breast samples 
#(matched primary solid tumor and normal samples)
# and calculated the abundance of G4-forming sequences among probes with high/low and differential methylation levels.
# Date: 26/7/2018
###############################################



# high <- 0.9
# low <- 0.1
# 
# #Start
# library(dplyr)
# tumor <- merge(geo.data[[4]],geo.data[[1]], by="probes")
# tumor <- na.omit(reorderBed(tumor,4,5,6,2))
# normal <- merge(geo.data[[5]],geo.data[[1]], by="probes")
# normal<-na.omit(reorderBed(normal,4,5,6,2))
# 
# tumor.10 <- subset(tumor, tumor$score < 0.1) 
# tumor.90 <- subset(tumor, tumor$score > 0.9) 
# tumor.10.rnd <- sample_n(tumor.10, 1000)
# tumor.90.rnd <- sample_n(tumor.90, 1000)
# quads.tumor.10 <- findQuads(tumor.10.rnd)
# quads.tumor.90 <- findQuads(tumor.90.rnd)
# 
# normal.10 <- subset(normal, normal$score < 0.1) 
# normal.90 <- subset(normal, normal$score > 0.9) 
# normal.10.rnd <- sample_n(normal.10, 1000)
# normal.90.rnd <- sample_n(normal.90, 1000)
# quads.normal.10 <- findQuads(normal.10.rnd)
# quads.normal.90 <- findQuads(normal.90.rnd)
# 
# dec <- subset(bed.data, bed.data$score < -1*db) 
# inc <- subset(bed.data, bed.data$score > db) 
# quads.dec <- findQuads(dec)
# quads.inc <- findQuads(inc)
# 
# boxplot(quads.normal.10[[2]]$quads, quads.tumor.10[[2]]$quads, quads.dec[[2]]$quads, quads.inc[[2]]$quads, quads.normal.90[[2]]$quads,quads.tumor.90[[2]]$quads)
# data4box 
# 


library(TCGAbiolinks)
library(MeinteR)
library(dplyr)
#clinical <- GDCquery_clinic(project = "TCGA-BRCA", type = "clinical patient")
mol.subtype <- TCGAquery_subtype(tumor = "BRCA")

query_meth.hg19 <- GDCquery(project= "TCGA-BRCA", 
                            data.category = "DNA methylation", 
                            platform = "Illumina Human Methylation 450", 
                            sample.type = c("Primary solid Tumor","Solid Tissue Normal"),
                            legacy = TRUE)
# Which samples are primary solid tumor
dataSmTP <- TCGAquery_SampleTypes(query_meth.hg19$results[[1]]$cases,"TP")
# which samples are solid tissue normal
dataSmNT <- TCGAquery_SampleTypes(query_meth.hg19$results[[1]]$cases,"NT")
matched_bars <- TCGAquery_MatchedCoupledSampleTypes(query_meth.hg19$results[[1]]$cases,c("NT","TP"))
query_meth.hg19.matched <- GDCquery(project= "TCGA-BRCA", 
                                    data.category = "DNA methylation", 
                                    platform = "Illumina Human Methylation 450", 
                                    barcode = matched_bars,
                                    sample.type = c("Primary solid Tumor","Solid Tissue Normal"),
                                    legacy = TRUE)
GDCdownload(query_meth.hg19.matched)
brca.matched.183 <- GDCprepare(query_meth.hg19.matched)



#TCGAvisualize_meanMethylation(brca.matched.183, groupCol = "shortLetterCode",filename = NULL)
#TCGAvisualize_meanMethylation(data.hg19,
#                              groupCol = "subtype_MethyLevel",
#                              subgroupCol = "subtype_Histology",
#                              group.legend  = "Groups",
#                              subgroup.legend = "Histology",
#                              filename = "brca_mean.png")
#β-values
#head(data.frame(brca.matched.183@assays$data))
beta.df <- data.frame(brca.matched.183@assays$data)
#remove rows with NA from beta.df
beta.df <- beta.df[,-1]
beta.df <- beta.df[,-1]
beta.df <- na.omit(beta.df)
row.ranges <-as.data.frame(brca.matched.183@rowRanges)

#Calculate Δβ values
colnames(beta.df) <- gsub("\\.", "-",colnames(beta.df))
beta.NT <- beta.df[,colnames(beta.df) %in% dataSmNT]
beta.TP <- beta.df[,colnames(beta.df) %in% dataSmTP]
mean.beta.NT <- data.frame(rowMeans(beta.NT, na.rm = TRUE))
mean.beta.NT$probes <- rownames(mean.beta.NT)
mean.beta.TP <- data.frame(rowMeans(beta.TP, na.rm = TRUE))
mean.beta.TP$probes <- rownames(mean.beta.TP)
dbeta <- merge(mean.beta.NT,mean.beta.TP, by= "probes")
dbeta$db <- dbeta$rowMeans.beta.NT..na.rm...TRUE. - dbeta$rowMeans.beta.TP..na.rm...TRUE. #negative for hyper in cancer
beta.dec.30 <- subset(dbeta, dbeta$db > 0.3) # decreased methylation in TP
beta.dec.30.1000 <- sample_n(beta.dec.30, 1000)
beta.dec.30.1000.ranges <- merge(beta.dec.30.1000, row.ranges, by.x="probes", by.y="probeID")
beta.dec.30.1000.r <- reorderBed(beta.dec.30.1000.ranges, 5,6,7,4)
quads.dec.30.1000 <- findQuads(beta.dec.30.1000.r)

beta.inc.30 <- subset(dbeta, dbeta$db < -0.3) # increased methylation in TP
beta.inc.30.1000 <- sample_n(beta.inc.30, 1000)
beta.inc.30.1000.ranges <- merge(beta.inc.30.1000, row.ranges, by.x="probes", by.y="probeID")
beta.inc.30.1000.r <- reorderBed(beta.inc.30.1000.ranges, 5,6,7,4)
quads.inc.30.1000 <- findQuads(beta.inc.30.1000.r)
calcP(quads.inc.30.1000[[2]]$quads,quads.dec.30.1000[[2]]$quads)

low = 0.1
high = 0.9
#convert probes to chromosome coordinates
mean.NT <- merge(mean.beta.NT, row.ranges, by.x="probes", by.y="probeID")
mean.TP <- merge(mean.beta.TP, row.ranges, by.x="probes", by.y="probeID")
mean.TP.re <- reorderBed(mean.TP, 3,4,5,2)
low.mean.TP <- mean.TP.re[mean.TP.re$score < low,]
high.mean.TP <- mean.TP.re[mean.TP.re$score > high,]

mean.NT.re <- reorderBed(mean.NT, 3,4,5,2)
low.mean.NT <- mean.NT.re[mean.NT.re$score < low,]
high.mean.NT <- mean.NT.re[mean.NT.re$score > high,]
#select random 1000 of NT low-high
high.mean.NT.1000 <- sample_n(high.mean.NT, 1000)
low.mean.NT.1000 <- sample_n(low.mean.NT, 1000)
quads.NT.high <-findQuads(high.mean.NT.1000)
quads.NT.low <-findQuads(low.mean.NT.1000)
calcP(quads.NT.high[[2]]$quads,quads.NT.low[[2]]$quads)

#select random 1000 of TP low-high
high.mean.TP.1000 <- sample_n(high.mean.TP, 1000)
low.mean.TP.1000 <- sample_n(low.mean.TP, 1000)
quads.TP.high <-findQuads(high.mean.TP.1000)
quads.TP.low <-findQuads(low.mean.TP.1000)
calcP(quads.TP.high[[2]]$quads,quads.TP.low[[2]]$quads)
# Beanplots


calcP <- function(input1, input2) {
  if (length(input1)<200 | length(input2)<200) {
    shap.inc <- shapiro.test(input1)
    shap.dec <- shapiro.test(input2)
    if (shap.inc$p.value < 0.05 | shap.dec$p.value <0.05) { # Not normal distribution
      wilc <- suppressWarnings(wilcox.test(input1,input2))
      message("p-value: ", round(wilc$p.value,4))
    } else { #Normal distribution
      ttest <- t.test(input1,input2)
      message("p-value: ", round(ttest$p.value,4))
    }
  } else {
    ttest <- t.test(input1,input2)
    message("p-value: ", round(ttest$p.value,4))
  }
}

# NT
#build beanplots
require(beanplot)
par(mfrow=c(1,3),oma = c(0, 0, 2, 0))

group1 <- quads.NT.high[[2]]$quads
group2 <- quads.NT.low[[2]]$quads
quads.inc.dec <- c(group1,group2)
class <- c(rep("high", length(group1)), rep("low",length(group2)))
beanplot(quads.inc.dec ~ class, ll = 0.00, side = "both", kernel="gaussian",
         xlab="p-value < 0.001", ylab="G-quadruplexes",  
         col = list("#8dd3c7", c("#bebada", "black")), show.names = F, axes=T)
axis(1,at=1,  labels="Solid Tissue Normal") 
axis(2)
legend("topright", fill = c("#8dd3c7", "#bebada"),
       legend = c("high methylation", "low methylation"), box.lty=0)

#TP
group1 <- quads.TP.high[[2]]$quads
group2 <- quads.TP.low[[2]]$quads
quads.inc.dec <- c(group1,group2)
class <- c(rep("high", length(group1)), rep("low",length(group2)))
beanplot(quads.inc.dec ~ class, ll = 0.00, side = "both", kernel="gaussian",
         xlab="p-value < 0.001", ylab="G-quadruplexes",  
         col = list("#8dd3c7", c("#bebada", "black")), show.names = F, axes=T)
axis(1,at=1,  labels="Primary Solid Tumor") 
axis(2)
legend("topright", fill = c("#8dd3c7", "#bebada"),
       legend = c("high methylation", "low methylation"), box.lty=0)


#increase-descrease |db|>0.3

group1 <- quads.dec.30.1000[[2]]$quads
group2 <- quads.inc.30.1000[[2]]$quads
quads.inc.dec <- c(group1,group2)
class <- c(rep("down-methylated", length(group1)), rep("up-methylated",length(group2)))
beanplot(quads.inc.dec ~ class, ll = 0.00, side = "both", kernel="gaussian",
         xlab="p-value < 0.001", ylab="G-quadruplexes",  
         col = list("#8dd3c7", c("#bebada", "black")), show.names = F, axes=T)
#axis(1,at=c(1, 2),  labels=c("A", "B")) 
axis(1,at=1,  labels="Δβ-values") 
axis(2)
legend("topright", fill = c("#8dd3c7", "#bebada"),
       legend = c("down-methylated", "up-methylated"), box.lty=0)
mtext("Beanplots of TCGA-BRCA methylation levels", outer = TRUE, cex = 1.5, font=1, col=rgb(0.1,0.2,0.3,1) )


dev.off()



# #TNBC
# HER.neg <- subset(mol.subtype, mol.subtype$HER2.Final.Status=="Negative")
# HER_ER.neg <- subset(HER.neg, HER.neg$ER.Status=="Negative")
# HER_ER_PR.neg <- subset(HER_ER.neg, HER_ER.neg$PR.Status=="Negative")
# HER_ER_PR.neg.matched <- subset(HER_ER_PR.neg, HER_ER_PR.neg$patient %in% matched_bars)
# 
# 
# met <- TCGAanalyze_DMR(data.hg19,
#                        groupCol = "subtype_Histology", # a column in the colData matrix
#                        group1 = "NT", # a type of the disease type column
#                        group2 = "TP", # a type of the disease column
#                        p.cut = 0.05,
#                        diffmean.cut = 0.15,
#                        save = FALSE,
#                        legend = "State",
#                        plot.filename = "test_metvolcano.png",
#                        cores = 1 # if set to 1 there will be a progress bar
# )


# #combine with tcga
# library(TCGA2STAT)
# tcga <- getTCGA(disease="STAD", data.type="Methylation", type="27K")
# tcga.df <- as.data.frame(tcga[[1]])
# tcga.rowmeans <- data.frame(rowMeans(tcga.df))
# tcga.rowmeans$probes <- rownames(tcga.rowmeans)
# rownames(tcga.rowmeans) <- NULL
# colnames(tcga.rowmeans) <- c("beta", "probes")
# bed.tcga<-na.omit(reorderBed(bed.tcga,4,5,6,2))
# plotBeta(bed.tcga)
# bed.tcga.high <- subset(bed.tcga, bed.stad$score > 0.9)
# bed.tcga.low <- subset(bed.tcga, bed.stad$score < 0.1)
# quads.stad.low <- findQuads(bed.stad.low[1:500,], offset=100)
# quads.stad.high <- findQuads(bed.stad.high[1:500,], offset=100)
# mean(quads.stad.high[[2]]$quads) # 1.275
# mean(quads.stad.low[[2]]$quads) #2.05
# 

#build beanplots
require(beanplot)
group1 <- quads.NT.high[[2]]$quads
group2 <- quads.NT.low[[2]]$quads
quads.inc.dec <- c(group1,group2)
class <- c(rep("high", length(group1)), rep("low",length(group2)))
beanplot(quads.inc.dec ~ class, ll = 0.00, side = "both", kernel="epanechnikov",
         main = "Bean plot of the TCGA-BRCA matched NORMAL samples",  xlab="p-value < 0.001", ylab="G-quadruplexes",  
         col = list("#8dd3c7", c("#bebada", "black")), show.names = F, axes=F)
#axis(1,at=c(1, 2),  labels=c("A", "B")) 
axis(2)
legend("topright", fill = c("#8dd3c7", "#bebada"),
       legend = c("high methylation", "low methylation"), box.lty=0)

par(bty="n")
boxplot(quads.inc.dec ~ class,, main="Box plot", col=rep(c("#8dd3c7", "#bebada"), 2))

#alternative visulaization with histograms instead of beanplots
#check plotrix

library(ggplot2)
library(gridExtra)
df = data.frame(x = mtx$quads, x2 = mtx$pals)

g = ggplot(df, aes(x)) + geom_histogram( aes(x = x, y = ..count..),
                                         binwidth = diff(range(df$x))/10, colour="grey", fill="#8dd3c7") + 
  geom_histogram( aes(x = x2, y = -..count..), binwidth = diff(range(df$x))/10, colour="darkgrey",fill= "#bebada") +
  ggtitle("sdfad") +
  scale_x_continuous(name = "Occurences per sequence" ) +
  scale_y_continuous(name = "Frequency") +
  theme_bw() 
#add smooth line
#change x-axis labels
#add legend

g <- g+coord_flip()
pdf("tempfig.pdf")
grid.arrange(g,g,g,nrow=1)
dev.off()


